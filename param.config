# ======================================================================
#
# CluStR configuration file.
#
# Lines starting with '#' are ignored; all other lines must contain a
# Name : Value pair to be read into the parameters dictionary.
#
# Spencer Everett, UCSC, 3/2017
#
# ======================================================================

ExperimentName: example

# ----------------------------------------------------------------------
# Drilling
# --------

# Simulated data for calibration. One halo catalog per kappa map,
# environment variables and wildcards will be expanded:
#CalibrationCatalogs: $PANGLOSS_DIR/calib/Millennium/catalog_example*.*
CalibrationCatalogs: $PANGLOSS_DIR/calib/Millennium/catalog_example.txt
CalibrationKappamaps: $PANGLOSS_DIR/calib/Millennium/GGL_los*.fits

# Observed data:
ObservedCatalog: $PANGLOSS_DIR/calib/Millennium/catalog_example.txt

# Column name conventions:

# General:
nRAName: pos_0[rad]
DecName: pos_1[rad]
Units: rad

# Calibration catalog:
CalibMhaloName: M_Subhalo[M_sol/h]
CalibRedshiftName: z_spec

# Observed catalog:
ObsMstarName: M_Stellar[M_sol/h]
ObsRedshiftName: z_obs

# The band used for selection etc
MagName: mag_SDSS_i

# Position of desired lightcone centre. Following Hilbert et al, we use
# coordinates J2000 *radians*, with nRA = -Right Ascension to make a
# right-handed system.
nRA: 0.00000
Dec: 0.00000

# If the lightcone has a strong lens in it, set the following to > 0.0:
StrongLensRedshift: 0.6
# Both observations and calibrations must correspond to the same zs:
SourceRedshift: 1.4

# How big do you want your lightcones?
LightconeRadius: 2.0  # in arcminutes
LightconeDepth: 26.0  # AB magnitude limit
LightconeDepthBand: i

# How many calibration lightcones do you want?
NCalibrationLightcones: 1000

# Destination directory for the calibration lightcones. This should be
# in your local workspace, because the lightcones will be specific to
# this experiment
CalibrationFolder: calib

# Making the calibration lines of sight is expensive. You probably don't want
# to do it more than once!
MakeNewCalibrations : True



# The observed lightcone catalog is kept in the current directory.

# ----------------------------------------------------------------------
# Reconstruction
# --------------

# We want the PDF Pr(kappah|D), in the form of a list of samples - or
# equivalently, realisations of the lightcone mass distribution:
NRealisations: 100

# Reconstructing the calibration lines of sight is expensive. If we have already# done this for an !*!identical!*! experiment setup we needen't do it again.
ReconstructCalibrations : True

StellarMass2HaloMassRelation: Behroozi
# No other options encoded so far...

# Halo mass function catalog for empirical Pr(Mh):
HMFfile: $PANGLOSS_DIR/calib/SHMR/HaloMassRedshiftCatalog.pickle

# Assumed photo z uncertainty:
PhotozError: 0.1

# Assumed Mstar uncertainty:
PhotometricMstarError: 0.45 # dex
SpectroscopicMstarError: 0.15 # dex


RayTracingScheme: sum
# The default ray-traced kappamap from Hilbert et al 2008 was made by
# simply summing the convergences on each lens plane. If you want a more
# complicated scheme for kappa_ext or mu_ext, you will need to change
# this. This is the correct scheme for weak lensing, but may need some
# modification if the system contains a strong lens

# How does the quality of data vary with radius and magnitude, for the
# real line of sight? This will allow the creation of an accurate
# calibration dataset:
PhotometricRadius: [1,2] # arcmin
PhotometricDepth: [26,26] # must pair with PhotometricRadius
SpectroscopicRadius: [1,2]# arcmin
SpectroscopicDepth: [24,23] # must pair with SpectroscopicRadius

# Note the calibration is extremely important, especially for kappa
# reconstructions, since converting stellar mass into an infered
# convergence is tough.

# ----------------------------------------------------------------------
# Calibrating
# --------------

# For a robust transformation between Pr(kappah|D) and Pr(kappa|D), we
# found we needed to go through a compression step, to reduce the
# influence of the poorly estimated high kappa halos. Pr(kappa|<kappah>)
# (where <> denotes the median) seems to work well.
Comparator: Kappah
ComparatorType: median
ComparatorWidth: 0.005 # we want to compare calibration lines of sight with exactly the same calibrator as the real line of sight, but that's unrealistic; we weight each line of sight by its similarity to our calibrator, using a gaussian of the width specified above. This is sadly done by fiat. The fiat is designed so that a reasonable number of lightcones is included in the weighting schemes. For 1000 calibration lightcones 0.01 seems reasonable, but it can be shrunk (a lot!) if you have many calibration lines of sight. We used 0.003 in Collett et al. 2013 with 3*10^5 calibration sightlines.
# Note we used a tophat weighting function in Collett et al. 2013.

# Do we want to make the joint distribution only, or do we want to slice
# that joint distribution to make the final Pr(kappa) distribution?
#CalibrateMode: Joint
CalibrateMode: JointAndSlice
# CalibrateMode: Slice

# ======================================================================
